{{- if and .Values.__services .Values.serviceName}}
{{- $projectName := .Values.__project_name}}
{{- $dockerRegistry := .Values.__template_docker_registry | default "gcr.io"}}
{{- $namespace := .Values.namespace | lower}}
{{- $isProduction := eq $namespace .Values.__production_namespace}}

{{- $serviceName := .Values.serviceName}}
{{- $serviceMap := index .Values.__services $serviceName}}

{{- $tag := not (index $serviceMap "fixed_tag") | ternary (.Values.tag | default "latest") (index $serviceMap "fixed_tag")}}
{{- $serviceImage := index $serviceMap "image"}}
{{- $projectImage := printf "%s/%s/%s-%s:%s" $dockerRegistry .Values.__gcp_project_id $projectName $serviceImage $tag}}
{{- $imageInProject := index $serviceMap "image_in_project"}}
{{- $image := $imageInProject | ternary $projectImage $serviceImage}}

{{- $env := index $serviceMap "env"}}

{{- $volumeName := printf "%s-volume" $serviceName}}
{{- $volumeConfig := index $serviceMap "persistent_volume"}}
{{- $volumeConfigProduction := index $serviceMap "persistent_volume_production"}}

apiVersion: apps/v1
kind: StatefulSet
metadata:
    labels:
        app: {{$projectName}}
        run: {{$serviceName}}
    name: {{$serviceName}}
    namespace: {{$namespace}}
spec:
    replicas: {{.Values.replicas | default 1}}
    selector:
        matchLabels:
            run: {{$serviceName}}
    serviceName: {{$serviceName}}
    template:
        metadata:
            labels:
                app: {{$projectName}}
                run: {{$serviceName}}
        spec:
            # Disable mounting the default service account's access token.
            # This way, the pods won't have any permissions to the Kubernetes API.
            automountServiceAccountToken: false
            containers:
              - image: {{$image}}
                name: {{$serviceName}}
                ports:
                  - containerPort: {{index $serviceMap "container_port"}}
                env:
                  - name: NAMESPACE
                    value: {{$namespace}}

                  {{- range $key, $value := .Values.__services}}
                  - name: {{$key | upper | replace "-" "_"}}_PORT
                    value: {{$value.external_port | quote}}
                  - name: {{$key | upper | replace "-" "_"}}_HOST
                    {{- if $isProduction}}
                    value: {{$value.host | quote}}
                    {{- else}}
                    value: {{printf "%s.%s" $namespace $value.host | quote}}
                    {{- end}}
                  {{- end}}

                  {{- range $env}}
                  - name: {{.name}}
                    value: {{.value | quote}}
                  {{- end}}

                  {{- if (index $serviceMap "secrets")}}
                  {{- range (index $serviceMap "secrets" "variables")}}
                  - name: {{.}}
                    valueFrom:
                        secretKeyRef:
                            name: {{index $serviceMap "secrets" "name"}}
                            key: {{.}}
                  {{- end}}
                  {{- end}}
              
                {{- if $volumeConfig}}
                {{- $subPath := index $volumeConfig "sub_path"}}
                volumeMounts:
                  - name: {{$volumeName}}
                    mountPath: {{index $volumeConfig "mount_path"}}
                    {{- if $subPath}}
                    subPath: {{$subPath}}
                    {{- end}}
                {{- end}}

    {{- if or $volumeConfig $volumeConfigProduction}}
    volumeClaimTemplates:
      - metadata:
          name: {{$volumeName}}
        spec:
          accessModes:
            - ReadWriteOnce
          {{- if and $volumeConfigProduction $isProduction}}
          storageClassName: {{(index $volumeConfigProduction "storage_class") | default "standard"}}
          resources:
            requests:
              storage: {{index $volumeConfigProduction "size"}}
          {{- else}}
          storageClassName: {{(index $volumeConfig "storage_class") | default "standard"}}
          resources:
            requests:
              storage: {{index $volumeConfig "size"}}
          {{- end}}
    {{- end}}
{{- end}}

